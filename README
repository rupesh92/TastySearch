This is your new Play application
=================================

This file will be packaged with your application when using `activator dist`.

There are several demonstration files available in this template.

Controllers
===========

- ReviewController.java:

  Shows how to handle simple HTTP requests. has various action each of which server different HHTP requests

Models
==========

- Product.java:

  Indicates the product on which the review is made by a user

- Review.java:

  This indicates the reviews made by user on a product. This has various properties like product, reviewText, time, etc

- Trie.java:

  A data structure in which all the words of the review made are stored

- TrieNode.java

  Nodes present in Trie, wherein each node represents a single character, and contains a list of reviews pertaining to
  the reviews ending at this character

Helpers
=======

- FileReadHelper.java:

  This class helps in reading the txt file containing all the review data and store them in memory

- NodeHelper.java

  This class helps in understanding the user query and respond back with the desired response he requested

- ReviewHelper.java

  This class helps in rating a review as per the user input queries by computing the number of words this review
  actually contains

  ==========================================================================================================
                                           How to set up the project
  ==========================================================================================================

  1. Go to https://playframework.com/download and download play with activator.

  2. For MacOS/Unix users, add activator installation dorectory to your system PATH
  Add to your login profile. Usually, this is $HOME/.profile:

  export PATH=/path/to/activator-x.x.x/bin:$PATH

  3. Once this is done, clone this project and brwse to this from terminal/cmd.
  4. type "activator compile" to compile the project and use "activator run" to run the project.
  This might take some time as it will download some of the necessary jars.
  5. Once this is done, you should see some thing like this in your console.

  --- (Running the application, auto-reloading is enabled) ---

  [info] p.c.s.NettyServer - Listening for HTTP on /0:0:0:0:0:0:0:0:9000

  (Server started, use Ctrl+D to stop and go back to the console...)

  6. Just go to localhost:9000 and access the app.

  7. Make sure you click the update data button to load the data from the txt file into the application runtime memory.

  8. Also, please add the finefoods.txt file to the data folder of the project. You will have to manually add it as it
  not included in this git project.